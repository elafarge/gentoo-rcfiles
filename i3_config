# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Ubuntu Mono Derivative Powerline 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
# font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
# bindsym $mod+z focus child

# scratchpad toggle
bindsym $mod+g scratchpad show

# workspace declaration
set $terminal "1 "
set $browser "2 "
set $editor "3 "
set $chat "4 "
set $background "5 "
set $music "6 "
set $trello "7 "

# Dvorak workspace number hack for the Ergodox EZ
set $one "("
set $two ")"
set $three "}"
set $four "+"
set $five "{"
set $six "]"
set $seven "["
set $eight "!"
set $nine "="
set $ten "*"

# switch to workspace
bindsym $mod+Shift+parenleft workspace $terminal
bindsym $mod+Shift+parenright workspace $browser
bindsym $mod+Shift+braceright workspace $editor
bindsym $mod+Shift+plus workspace $chat
bindsym $mod+Shift+braceleft workspace $background
bindsym $mod+bracketright workspace $music
bindsym $mod+bracketleft workspace $trello
bindsym $mod+Shift+exclam workspace 8
bindsym $mod+equal workspace 9
bindsym $mod+Shift+asterisk workspace 10

# move focused container to workspace
bindsym $mod+1 move container to workspace $terminal
bindsym $mod+2 move container to workspace $browser
bindsym $mod+3 move container to workspace $editor
bindsym $mod+4 move container to workspace $chat
bindsym $mod+5 move container to workspace $background
bindsym $mod+6 move container to workspace $music
bindsym $mod+7 move container to workspace $trello
bindsym $mod+8 move container to workspace 8
bindsym $mod+9 move container to workspace 9
bindsym $mod+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
# Move workspace top laptop screen
bindsym $mod+z move workspace to output eDP1;
bindsym $mod+Shift+z move workspace to output HDMI1;

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Locking i3
bindsym $mod+Shift+x exec ~/.rcfiles/lock.sh

# No window borders when only one window on workspace (or how to save two more
# pixels... greedy greedy greedy)
hide_edge_borders smart

# Pop-up windows and dialogs are meant to be opened... as popups :)
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Pavucontrol"] floating enable

# Very useful when one gets annoyed... automatically going back to the previous
# workspace :)
workspace_auto_back_and_forth yes

# The mouse shouldn't be given SO MUCH importance in my view :)
focus_follows_mouse no

# Multimedia keys configuration
# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20
bindsym XF86MonBrightnessDown exec xbacklight -dec 20

# Touchpad controls (TODO)
# bindsym XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

for_window [class="Scratchpad"] move to scratchpad

# No title bars
new_window 1pixel

# Colors
set $transparent         #1d1f21cc
set $bg-color 	         #1d1f21
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00

# Gaps :)
# smart_gaps
gaps inner 7
gaps outer 0

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#   i3bar_command i3bar -t
#   status_command /home/etienne/Code/Go/bin/goblocks
#   position top
#   height 28
# 	colors {
# 		background $transparent
#
#    	separator #757575
#
# 		#                  border             background         text
# 		focused_workspace  $bg-color          $bg-color          $text-color
# 		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
# 		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
# 	}
# }

# Rofi as a great launcher
bindsym $mod+d exec "rofi -show run -lines 5 -eh 2 -width 100 -padding 600 -opacity 85 -color-window \\"#002b37, #002b37, #003642\\" -color-normal \\"#002b37, #819396, #002b37, #003642, #819396\\" -color-active \\"#002b37, #008ed4, #002b37, #003642, #008ed4\\" -color-urgent \\"#002b37, #da4281, #002b37, #003642, #da4281\\""
bindsym --release Print exec --no-startup-id scrot -c

# Let's start polybar
exec --no-startup-id .config/polybar/startup.sh

# And our other apps
exec --no-startup-id sh -c "~/.rcfiles/startup.sh $terminal $browser $editor $chat $background $music $trello"
